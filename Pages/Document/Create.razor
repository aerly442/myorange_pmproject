@page "/Document/Create/{Id:int}"
@using myorange_pmproject.DTO
@using myorange_pmproject.Service
@using myorange_pmproject.Pages.Component;
@inject DocumentService mService
@inject ProjectService pService
@attribute [Authorize(Roles = "Admin, User")]
@inject NavigationManager nv
@using Radzen
@using Radzen.Blazor

<PageTitle>创建文档</PageTitle>
<div class="container mt-5">
    <h2>文档信息表单</h2>
   
   <EditForm Model="@p" OnValidSubmit="@SaveData">  
    <div class="mb-3">
         <label for="projectName" class="form-label">标题</label>
        <input type="text" @bind="p.Title" class="form-control"
               placeholder="请输入名称">
           
     </div>
    <div class="mb-3">
        <label for="projectIntro" class="form-label">内容</label>
   

        <RadzenHtmlEditor @bind-Value="p.Content"
                          style="height: 450px;"
                          Input=@OnInput Change=@OnChange Paste=@OnPaste 
                              UploadComplete=@OnUploadComplete
                          Execute=@OnExecute UploadUrl="upload/image" />


        <RadzenDialog />

   

    </div>
        <div class="mb-3">
            <label for="ddlProjects" class="form-label">选择对应项目</label>
            <RadzenDropDown @bind-Value="@ProjectId" Data="@Projects"
                            TextProperty="@nameof(ProjectDTO.Name)"
                            ValueProperty="@nameof(ProjectDTO.Id)"
                            Style="width: 100%; " Name="ddlProjects" />

        </div>
        <!-- rich text editor -->
    <div class="mb-3">
        <label for="projectInfo" class="form-label"></label>    
        <FileUpload  OnUploadFinished="HandleFileUploadEvent"></FileUpload>
    </div>
    <!-- 文件上传组件  -->
   
    <div class="mb-3">
            <DataAnnotationsValidator />
            <ValidationSummary />
     </div>
    <div class="alert alert-danger " style="display:@ErrorDisplay">
        @ErrorInfo
    </div>
    <button type="submit" class="btn btn-primary">提交</button>
 

</EditForm>
 

</div>


@code {



    private Project_documentDTO p = new Project_documentDTO();
    private String ErrorInfo      = "";

    [Parameter]
    public int Id { get; set; }
    private String ErrorDisplay = "none";
    private int ProjectId;
    private List<FileDTO> lstFiles = new List<FileDTO>();
    private List<ProjectDTO> Projects;


    protected override async Task OnInitializedAsync()
    {
        Projects = await pService.GetList();

        if (Id > 0)
        {
            p = await mService.GetSinger(Id);
            if (p!= null)
            {
                this.ProjectId = p.ProjectId!=null ?(int)p.ProjectId:0;
                StateHasChanged();
            }


        }
        
        
      

    }

    
     


    void OnPaste(HtmlEditorPasteEventArgs args)
    {
        //console.Log($"Paste: {args.Html}");
    }

    void OnChange(string html)
    {
        // console.Log($"Change: {html}");
    }

    void OnInput(string html)
    {
        //console.Log($"Input: {html}");
    }

    void OnExecute(HtmlEditorExecuteEventArgs args)
    {
        //console.Log($"Execute: {args.CommandName}");
    }

    void OnUploadComplete(UploadCompleteEventArgs args)
    {
        //console.Log($"Upload complete: {args.RawResponse}");
    }
  
    // private void HandleOptionChanged(ChangeEventArgs e)  
    // {  
    //     var id    = e.Value.ToString();  
    //     int nId   = 0 ;
    //     int.TryParse(id, out nId) ;
    //     ProjectId  = nId ;
    // } 

    private void HandleFileUploadEvent(List<FileDTO> _lstFiles)
    {  
        this.lstFiles = _lstFiles ;
        // 处理来自子组件的数据  
    } 



    private async Task SaveData()
    {

      
        if (String.IsNullOrEmpty(p.Title) || String.IsNullOrEmpty(p.Content))
        {

            ErrorInfo    = "请输入名称和内容";
            ErrorDisplay = "block";

        }
        else
        {
            var blnSave = await mService.Save(p, ProjectId, this.lstFiles);
            ErrorInfo = blnSave ? "保存成功" : "保存失败";
            if (blnSave)
            {

                nv.NavigateTo("/Document/List");

            }
            else
            {
                ErrorDisplay = "block";
            }


        }
      



    }





}