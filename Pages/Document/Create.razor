@page "/Document/Create/{Id:int}"
@using myorange_pmproject.DTO
@using myorange_pmproject.Service
@inject DocumentService mService
@attribute [Authorize(Roles = "Admin, User")]
@inject NavigationManager nv
@inject IWebHostEnvironment Environment
@inject FileUploadService fileUploadService

 
<PageTitle>创建文档</PageTitle>
<div class="container mt-5">
    <h2>文档信息表单</h2>
    <EditForm Model="@p" OnValidSubmit="SaveData">
   
    <div class="mb-3">
         <label for="projectName" class="form-label">标题</label>
        <input type="text" @bind="p.Title" class="form-control"
               placeholder="请输入名称">
           
     </div>
    <div class="mb-3">
        <label for="projectIntro" class="form-label">内容</label>
        <textarea class="form-control" @bind="p.Content"
                  rows="3" placeholder="请输入内容"></textarea>
     
    </div>
    <div class="mb-3">
        <label for="projectIntro" class="form-label">上传文件</label>
        <InputFile OnChange="LoadFiles" multiple />
     
    </div>
    <div class="mb-3">
    @if (isLoading)
    {
        <p>进度: @string.Format("{0:P0}", progressPercent)</p>
    }
    else
    {
        <ul>
            @foreach (var file in loadedFiles)
            {
                <li>文件名: @file.Name 文件上传成功！</li>
            }
        </ul>
    }
    </div>
     <div class="mb-3">
            <DataAnnotationsValidator />
            <ValidationSummary />
    </div>
    <div class="alert alert-danger " style="display:@ErrorDisplay">
        @ErrorInfo
    </div>
    <button type="submit" class="btn btn-primary" >提交</button>
   </EditForm>
 

</div>


@code {


    private Project_documentDTO p = new Project_documentDTO();
    private String ErrorInfo      = "";

    [Parameter]
    public int Id { get; set; }

    private String ErrorDisplay = "none";
    //private string content = "<p>Hello, TinyMCE!</p>";
    private List<IBrowserFile> loadedFiles = new();
    private long maxFileSize    = 1024 * 1024*1000;
    private int maxAllowedFiles = 10;
    private bool isLoading;
    private decimal progressPercent;

    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            p = await mService.GetSinger(Id);
        }

    }

    private async Task LoadFiles(InputFileChangeEventArgs e)
    {
        isLoading       = true;
        loadedFiles.Clear();
        progressPercent = 0;

        foreach (var file in e.GetMultipleFiles(maxAllowedFiles))
        { 
                string extName      = fileUploadService.GetExtName(file.Name);
                string aFileName    = fileUploadService.GetFileName() + extName; 
                string relativePath = fileUploadService.GetFilePath() + "/" + aFileName; // 相对路径
                string filePath     = Environment.ContentRootPath + relativePath; // 获取绝对路径

                var path            = filePath ;//Path.Combine(Environment.ContentRootPath, "upload", aFileName);

                await using FileStream writeStream = new(path, FileMode.Create);
                using var readStream = file.OpenReadStream(maxFileSize);
                var bytesRead = 0;
                var totalRead = 0;
                var buffer = new byte[1024 * 10];

                while ((bytesRead = await readStream.ReadAsync(buffer)) != 0)
                {
                    totalRead += bytesRead;
                    await writeStream.WriteAsync(buffer, 0, bytesRead);
                    progressPercent = Decimal.Divide(totalRead, file.Size);
                    StateHasChanged();
                }

                loadedFiles.Add(file);

                //Logger.LogInformation(
                //    "Unsafe Filename: {UnsafeFilename} File saved: {Filename}",
                //    file.Name, trustedFileName);
            
             
        }

        isLoading = false;
    }

    private async Task SaveData()
    {

        if (String.IsNullOrEmpty(p.Title) || String.IsNullOrEmpty(p.Content))
        {

            ErrorInfo    = "请输入名称和内容";
            ErrorDisplay = "block";

        }
        else
        {

            var blnSave = await mService.Save(p);
            ErrorInfo = blnSave ? "保存成功" : "保存失败";
            if (blnSave)
            {

                nv.NavigateTo("/Document/List");

            }
            else
            {
                ErrorDisplay = "block";
            }


        }




    }





}