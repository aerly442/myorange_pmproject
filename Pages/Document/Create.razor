@page "/Document/Create/{Id:int}"
@using myorange_pmproject.DTO
@using myorange_pmproject.Service
@using myorange_pmproject.Pages.Component;
@inject DocumentService mService
@attribute [Authorize(Roles = "Admin, User")]
@inject NavigationManager nv


 
<PageTitle>创建文档</PageTitle>
<div class="container mt-5">
    <h2>文档信息表单</h2>
    <EditForm Model="@p" OnValidSubmit="SaveData">
   
    <div class="mb-3">
         <label for="projectName" class="form-label">标题</label>
        <input type="text" @bind="p.Title" class="form-control"
               placeholder="请输入名称">
           
     </div>
    <div class="mb-3">
        <label for="projectIntro" class="form-label">内容</label>
        <textarea class="form-control" @bind="p.Content"
                  rows="3" placeholder="请输入内容"></textarea>
     
    </div>
    <div class="mb-3">
        <label for="projectInfo" class="form-label">选择对应项目</label>
        
     <select class="form-control"  @onchange="HandleOptionChanged">  
        @foreach (var p1 in p.Projects)  
        {  
            <option value="@p1.Id">@p1.Name</option>  
        }  
        </select>  
    </div>

    <div class="mb-3">
        <label for="projectInfo" class="form-label"></label>    
        <FileUpload  OnUploadFinished="HandleFileUploadEvent"></FileUpload>
    </div>
    <!-- 文件上传组件  -->
   
    <div class="mb-3">
            <DataAnnotationsValidator />
            <ValidationSummary />
    </div>
    <div class="alert alert-danger " style="display:@ErrorDisplay">
        @ErrorInfo
    </div>
    <button type="submit" class="btn btn-primary" >提交</button>
   </EditForm>
 

</div>


@code {


    private Project_documentDTO p = new Project_documentDTO();
    private String ErrorInfo      = "";

    [Parameter]
    public int Id { get; set; }

    private String ErrorDisplay = "none";
    //private string content = "<p>Hello, TinyMCE!</p>";

    //private string UpLoadFileName = "123.jpg";

    private List<string> lstFiles = new List<string>();


    protected override async Task OnInitializedAsync()
    {
        if (Id > 0)
        {
            p = await mService.GetSinger(Id);
        }

    }

    private int ProjectId;  
    private List<string> Options = new List<string> { "选项1", "选项2", "选项3" };  
  
    private void HandleOptionChanged(ChangeEventArgs e)  
    {  
        var id    = e.Value.ToString();  
        int nId   = 0 ;
        int.TryParse(id, out nId) ;
        ProjectId  = nId ;
    } 

    private void HandleFileUploadEvent(List<string> _lstFiles)  
    {  
        this.lstFiles = _lstFiles ;
        // 处理来自子组件的数据  
    } 



    private async Task SaveData()
    {

      
        if (String.IsNullOrEmpty(p.Title) || String.IsNullOrEmpty(p.Content))
        {

            ErrorInfo    = "请输入名称和内容";
            ErrorDisplay = "block";

        }
        else
        {
            var blnSave = await mService.Save(p,ProjectId,null);
            ErrorInfo = blnSave ? "保存成功" : "保存失败";
            if (blnSave)
            {

                nv.NavigateTo("/Document/List");

            }
            else
            {
                ErrorDisplay = "block";
            }


        }
      



    }





}